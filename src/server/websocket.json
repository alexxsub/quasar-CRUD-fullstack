WebSocket {
  _events:
   [Object: null prototype] {
     close: [ [Function], [Function: connectionClosedHandler] ],
     error: [Function: connectionClosedHandler],
     message: [Function] },
  _eventsCount: 3,
  _maxListeners: undefined,
  readyState: 1,
  protocol: 'graphql-ws',
  _binaryType: 'nodebuffer',
  _closeFrameReceived: false,
  _closeFrameSent: false,
  _closeMessage: '',
  _closeTimer: null,
  _closeCode: 1006,
  _extensions: {},
  _isServer: true,
  _receiver:
   Receiver {
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 45,
        writing: true,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: [Function: nop],
        writelen: 45,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _events:
      [Object: null prototype] {
        conclude: [Function: receiverOnConclude],
        drain: [Function: receiverOnDrain],
        error: [Function: receiverOnError],
        message: [Function: receiverOnMessage],
        ping: [Function: receiverOnPing],
        pong: [Function: receiverOnPong] },
     _eventsCount: 6,
     _maxListeners: undefined,
     _binaryType: 'nodebuffer',
     _extensions: {},
     _maxPayload: 104857600,
     _bufferedBytes: 0,
     _buffers: [],
     _compressed: false,
     _payloadLength: 39,
     _mask: <Buffer 7e ac 7e d4>,
     _fragmented: 0,
     _masked: true,
     _fin: true,
     _opcode: 1,
     _totalPayloadLength: 0,
     _messageLength: 0,
     _fragments: [],
     _state: 4,
     _loop: true,
     [Symbol(websocket)]: [Circular] },
  _sender:
   Sender {
     _extensions: {},
     _socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 0,
        parser: null,
        on: [Function],
        _paused: false,
        [Symbol(asyncId)]: 60,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: -1,
           _idlePrev: null,
           _idleNext: null,
           _idleStart: 3429,
           _onTimeout: null,
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 61,
           [Symbol(triggerId)]: 60 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(websocket)]: [Circular] },
     _firstFragment: true,
     _compress: false,
     _bufferedBytes: 0,
     _deflating: false,
     _queue: [] },
  _socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        close: [Function: socketOnClose],
        data: [Function: socketOnData],
        error: [Function: socketOnError] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:127.0.0.1:4000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:127.0.0.1:4000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 16 },
     timeout: 0,
     parser: null,
     on: [Function],
     _paused: false,
     [Symbol(asyncId)]: 60,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 3429,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 61,
        [Symbol(triggerId)]: 60 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(websocket)]: [Circular] },
  upgradeReq:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        paused: true,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 0,
        parser: null,
        on: [Function],
        _paused: false,
        [Symbol(asyncId)]: 60,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: -1,
           _idlePrev: null,
           _idleNext: null,
           _idleStart: 3429,
           _onTimeout: null,
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 61,
           [Symbol(triggerId)]: 60 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(websocket)]: [Circular] },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 0,
        parser: null,
        on: [Function],
        _paused: false,
        [Symbol(asyncId)]: 60,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: -1,
           _idlePrev: null,
           _idleNext: null,
           _idleStart: 3429,
           _onTimeout: null,
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 61,
           [Symbol(triggerId)]: 60 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(websocket)]: [Circular] },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: 'localhost:4000',
        'user-agent':
         'Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0',
        accept:
         'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'accept-language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3',
        'accept-encoding': 'gzip, deflate',
        'sec-websocket-version': '13',
        origin: 'http://localhost:4000',
        'sec-websocket-protocol': 'graphql-ws',
        'sec-websocket-extensions': 'permessage-deflate',
        'sec-websocket-key': 'cdyFR+5EVaHR4LDsFKy0fw==',
        cookie: 'lang=ru-RU; bl_lang_ignore=1',
        connection: 'keep-alive, Upgrade',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        upgrade: 'websocket' },
     rawHeaders:
      [ 'Host',
        'localhost:4000',
        'User-Agent',
        'Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0',
        'Accept',
        'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language',
        'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3',
        'Accept-Encoding',
        'gzip, deflate',
        'Sec-WebSocket-Version',
        '13',
        'Origin',
        'http://localhost:4000',
        'Sec-WebSocket-Protocol',
        'graphql-ws',
        'Sec-WebSocket-Extensions',
        'permessage-deflate',
        'Sec-WebSocket-Key',
        'cdyFR+5EVaHR4LDsFKy0fw==',
        'Cookie',
        'lang=ru-RU; bl_lang_ignore=1',
        'Connection',
        'keep-alive, Upgrade',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'Upgrade',
        'websocket' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: true,
     url: '/graphql',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 0,
        parser: null,
        on: [Function],
        _paused: false,
        [Symbol(asyncId)]: 60,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: -1,
           _idlePrev: null,
           _idleNext: null,
           _idleStart: 3429,
           _onTimeout: null,
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 61,
           [Symbol(triggerId)]: 60 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(websocket)]: [Circular] },
     _consuming: false,
     _dumped: false,
     parser: null } }
         }
        }